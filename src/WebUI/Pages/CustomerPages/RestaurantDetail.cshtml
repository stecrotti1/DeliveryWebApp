@page "{id:int?}"
@using IdentityServer4.Extensions
@model DeliveryWebApp.WebUI.Pages.CustomerPages.RestaurantDetailModel
@{
    ViewData["Title"] = @Model.Restaurateur.RestaurantName;
}

@section Head
{
    <link rel="stylesheet" href="~/css/images.min.css"/>

    <style type="text/css">
        .square {
            height: 100px;
            width: 100px;
        }
    </style>
}

<h4>@ViewData["Title"]</h4>

<partial name="_StatusMessage" for="StatusMessage"/>

@if (!Model.Restaurateur.Logo.IsNullOrEmpty())
{
    <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Restaurateur.Logo)" alt="restaurant_logo" class="img-dashboard square img-fluid rounded"/>
}
else
{
    <svg xmlns="http://www.w3.org/2000/svg" width="150" height="150" fill="currentColor" class="bi bi-image" viewBox="0 0 16 16" title="Food vendor didn't upload any image'">
        <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
        <path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/>
    </svg>
}
<hr/>

@if (!Model.Products.IsNullOrEmpty())
{
    <table class="table">
        <thead>
        <tr class="table-primary">
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Discount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Category)
            </th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>
                    @if (!product.Image.IsNullOrEmpty())
                    {
                        <img class="img-dashboard square rounded img-fluid" style="height: 60px; width: 60px" src="data:image/jpeg;base64,@Convert.ToBase64String(product.Image)" alt=""/>
                    }
                    else
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" width="60" height="60" fill="currentColor" class="bi bi-image" viewBox="0 0 16 16" title="Food vendor didn't upload any image'">
                            <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
                            <path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/>
                        </svg>
                    }
                </td>
                <td>
                    @Html.DisplayFor(model => product.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => product.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(model => product.Price)
                </td>
                <td>
                    @Html.DisplayFor(model => product.Discount)
                </td>
                <td>
                    @Html.DisplayFor(model => product.Category)
                </td>
                <td>
                    <button type="button" class="btn btn-outline-dark" data-bs-toggle="modal" data-bs-target="#addToBasketModal">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-cart-plus" viewBox="0 0 16 16">
                            <path d="M9 5.5a.5.5 0 0 0-1 0V7H6.5a.5.5 0 0 0 0 1H8v1.5a.5.5 0 0 0 1 0V8h1.5a.5.5 0 0 0 0-1H9V5.5z"/>
                            <path d="M.5 1a.5.5 0 0 0 0 1h1.11l.401 1.607 1.498 7.985A.5.5 0 0 0 4 12h1a2 2 0 1 0 0 4 2 2 0 0 0 0-4h7a2 2 0 1 0 0 4 2 2 0 0 0 0-4h1a.5.5 0 0 0 .491-.408l1.5-8A.5.5 0 0 0 14.5 3H2.89l-.405-1.621A.5.5 0 0 0 2 1H.5zm3.915 10L3.102 4h10.796l-1.313 7h-8.17zM6 14a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm7 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                        </svg>
                    </button>

                    @* Add to basket modal *@
                    <div class="modal fade show" id="addToBasketModal" aria-labelledby="addToBasketModalTitle-@product.Id" aria-modal="true" role="dialog">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="addToBasketModalTitle-@product.Id">Add @product.Name to basket</h5>
                                    <button class="btn-close" data-bs-dismiss="modal" aria-label="close"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        @if (!product.Image.IsNullOrEmpty())
                                        {
                                            <img class="img-dashboard square rounded img-fluid" style="height: 75px; width: 75px" src="data:image/jpeg;base64,@Convert.ToBase64String(product.Image)" alt=""/>
                                        }
                                        <p>@product.Category</p>
                                    </div>
                                    <div class="row">
                                        <p>@product.Price</p> @* TODO: culture *@
                                    </div>
                                    <div class="row">
                                        @if (product.Quantity == 0)
                                        {
                                            <div class="alert alert-danger" role="alert">Out of stock</div>
                                        }
                                        else
                                        {
                                            @for (var i = 0; i < product.Quantity; i++)
                                            {
                                                Model.Quantities.Add(new SelectListItem { Text = (i + 1).ToString(), Value = (i + 1).ToString() });
                                            }
                                            <label asp-for="Input.Quantity"></label>
                                            <select class="form-select col-1" aria-label="Select quantity" asp-for="Input.Quantity" asp-items="Model.Quantities"></select>
                                            <span asp-validation-for="Input.Quantity" class="text-danger"></span>
                                        }
                                    </div>
                                    <div class="row">
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
}
