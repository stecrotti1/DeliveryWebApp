@page
@using DeliveryWebApp.Application.Orders.Extensions
@using DeliveryWebApp.Infrastructure.Persistence
@using IdentityServer4.Extensions
@using Microsoft.AspNetCore.Localization
@model DeliveryWebApp.WebUI.Pages.AdminPages.OrdersModel
@inject ApplicationDbContext context
@{
    ViewData["Title"] = "Orders";
    var requestCultureFeature = HttpContext.Features.Get<IRequestCultureFeature>();
    var requestCulture = requestCultureFeature.RequestCulture;
    // TODO: localize
}

<h1>@ViewData["Title"]</h1>

@if (Model.Orders.IsNullOrEmpty())
{
    <div class="alert-secondary alert" role="alert">
        <p class="text-center">
            There are no orders at the moment
        </p>
    </div>
}
else
{
    <div class="text-center">

        <table class="table">
            <thead>
            <tr class="table-primary">
                <th>
                    @Html.DisplayNameFor(model => model.Orders[0].Id)
                </th>
                <th>
                    Customer
                </th>
                <th>
                    Food Vendor
                </th>
                <th>
                    Date
                </th>
                <th>
                    Delivery Date
                </th>
                <th>
                    Status
                </th>
                <th></th>
            </tr>
            </thead>
            <tbody>
                @foreach(var order in Model.Orders)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => order.Id)
                        </td>
                        <td>
                            @* Customer *@
                            <a asp-page="/AdminPages/CustomerDetail" asp-route-id="@order.CustomerId" class="link-primary">
                                @{
                                    var c = await order.GetCustomerAsync(context);
                                    var usr = await context.Users.FindAsync(c.ApplicationUserFk);
                                }
                                @Html.DisplayFor(model => usr.UserName)
                            </a>
                        </td>
                        <td>
                            @* Restaurateur *@
                            <a asp-page="/AdminPages/RestaurateurDetail" asp-route-id="@order.RestaurateurId" class="link-primary">
                                @{
                                    var r = await order.GetRestaurateurAsync(context);
                                }
                                @Html.DisplayFor(model => r.RestaurantName)
                            </a>
                        </td>
                        <td>
                            @order.Date.ToLocalTime().ToString("F")
                        </td>
                        <td>
                            @if (order.DeliveryDate == null)
                            {
                                <p>N/A</p>
                            }
                            else
                            {
                                @order.DeliveryDate.Value.ToLocalTime().ToString("F")
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(model => order.Status)
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
}